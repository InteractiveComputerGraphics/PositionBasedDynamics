name: build-windows-wheels

on:
  push:
    branches: [ master ]

jobs:
  # Build the python wheel in parallel
  build-windows-wheels:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        # python-version: [3.7]
        python-version: ['cp38-win_amd64', 'cp39-win_amd64', 'cp310-win_amd64', 'cp311-win_amd64', 'cp312-win_amd64', 'cp313-win_amd64']

    steps:
    # Checkout repo
    - uses: actions/checkout@v3

    # Checkout repo
    - name: Set up Python (runner)
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install build tooling
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade cibuildwheel twine

    - name: Build manylinux wheels with cibuildwheel
      env:
        EXTRA_CMAKE_DEFINES: "-DUSE_AVX=On"
        # Verbosity
        CIBW_BUILD_VERBOSITY: "1"
        CIBW_BUILD: ${{matrix.python-version}}
      run: |
        # If needed, adapt setup.py to consume EXTRA_CMAKE_DEFINES; for now rely on defaults.
        python -m cibuildwheel --output-dir wheelhouse

    - name: Upload wheels artifact
      uses: actions/upload-artifact@v4
      with:
        name: pypbd-${{matrix.python-version}}
        path: wheelhouse
      if: always()

    # Upload wheel to pypi
    - name: Upload wheel to pypi
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload wheelhouse/*.whl --skip-existing
